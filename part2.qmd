---
title: "Part 2"
date: "2023-12-4"
author:
    - name: Vincent DiPerna
format:
    html:
        code-fold: false
jupyter: python3
---

## Clustering

### Code
```{python}
# Imports
from sklearn.cluster import DBSCAN
from sklearn.datasets import make_moons
import matplotlib.pyplot as plt
import numpy as np

# Helper method that plots the clusters generated by DBSCAN from 
# handson-ml3 in 09_unsupervised_learning.ipynb
def plot_dbscan(dbscan, X, size, show_xlabels=True, show_ylabels=True):
    core_mask = np.zeros_like(dbscan.labels_, dtype=bool)
    core_mask[dbscan.core_sample_indices_] = True
    anomalies_mask = dbscan.labels_ == -1
    non_core_mask = ~(core_mask | anomalies_mask)

    cores = dbscan.components_
    anomalies = X[anomalies_mask]
    non_cores = X[non_core_mask]
    
    plt.scatter(cores[:, 0], cores[:, 1],
                c=dbscan.labels_[core_mask], marker='o', s=size, cmap="Paired")
    plt.scatter(cores[:, 0], cores[:, 1], marker='*', s=20,
                c=dbscan.labels_[core_mask])
    plt.scatter(anomalies[:, 0], anomalies[:, 1],
                c="r", marker="x", s=100)
    plt.scatter(non_cores[:, 0], non_cores[:, 1],
                c=dbscan.labels_[non_core_mask], marker=".")
    if show_xlabels:
        plt.xlabel("$x_1$")
    else:
        plt.tick_params(labelbottom=False)
    if show_ylabels:
        plt.ylabel("$x_2$", rotation=0)
    else:
        plt.tick_params(labelleft=False)
    plt.title(f"eps={dbscan.eps:.2f}, min_samples={dbscan.min_samples}")
    plt.grid()
    plt.gca().set_axisbelow(True)

# Create a dataset of two semicircles
X, y = make_moons(n_samples = 500)

# Initialize the DBSCAN clustering algorithm
db = DBSCAN(eps = 0.3)

# Fit the data
db.fit(X)

# Store the labels in a more readable field
labels = db.labels_

# Print the estimated number of clusters and noise points
print(f"Estimated number of clusters: {len(set(labels)) - (1 if -1 in labels else 0)}")
print(f"Estimated number of noise points: {list(labels).count(-1)}")

# Plot the data
plot_dbscan(db, X, size = 500)
```

### Explanation
Here we use the DBSCAN clustering algorithm to cluster a dataset of two semicircles. We set the eps to 0.3, and fit the data.
We then print the estimated number of clusters and noise points. We can see that the estimated number of clusters is 2, and the
estimated number of noise points is 0. We can see that the clusters are very accurate, with no noise points. We set the RANDOM_STATE
to 20 for consistency and reproducibility. We print out the estimated number of clusters and noise points, and then plot the data.